Index: src/test/java/steps/TasbihSteps.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package steps;\r\n\r\nimport io.cucumber.java.en.And;\r\nimport io.cucumber.java.en.Given;\r\nimport io.cucumber.java.en.When;\r\nimport io.cucumber.java.en.Then;\r\nimport org.example.Tasbih;\r\n\r\nimport static org.junit.Assert.assertEquals;\r\nimport static org.junit.Assert.assertTrue;\r\n\r\npublic class TasbihSteps {\r\n\r\n   private Tasbih tasbih = new Tasbih();\r\n    private int initialCount;\r\n    @Given(\"the tasbih is initialized\")\r\n    public void theTasbihIsInitialized() {\r\n        tasbih.initialize();\r\n    }\r\n\r\n    @When(\"I press the count button {int} times\")\r\n    public void iPressTheCountButtonTimes(int input) {\r\n        tasbih.pressCountButton(input);\r\n    }\r\n\r\n    @Then(\"the count should be {int}\")\r\n    public void theCountShouldBe(int expectedCount) {\r\n        assertEquals(expectedCount, tasbih.getCount());\r\n    }\r\n\r\n    @When(\"I press the reset button\")\r\n    public void iPressTheResetButton() {\r\n        tasbih.pressResetButton();\r\n    }\r\n\r\n    @Then(\"the count should be reset to {int}\")\r\n    public void theCountShouldBeResetTo(int expectedCount) {\r\n        assertEquals(expectedCount, tasbih.getCount());\r\n    }\r\n\r\n    @When(\"I press the LED button\")\r\n    public void iPressTheLEDButton() {\r\n        tasbih.pressLEDButton();\r\n    }\r\n\r\n    @Then(\"the LED should be {string}\")\r\n    public void theLEDShouldBe(String expectedStatus) {\r\n        boolean expectedLedOn = expectedStatus.equalsIgnoreCase(\"on\");\r\n        assertEquals(expectedLedOn, tasbih.isLEDOn());\r\n    }\r\n\r\n    @Then(\"the screen display of the count result is {int}\")\r\n    public void theScreenDisplayOfTheCountResultIsInput(int expectedCount) {\r\n        assertEquals(expectedCount, tasbih.getCount());\r\n\r\n    }\r\n\r\n    @And(\"ignore the device until the screen turns off\")\r\n    public void ignoreTheDeviceUntilTheScreenTurnsOff() throws InterruptedException {\r\n            Thread.sleep(31000);\r\n            assertEquals(false, tasbih.isScreenOn());  //\r\n    }\r\n\r\n    @When(\"I long press the count button {int} second\")\r\n    public void iLongPressTheCountButtonSecond(int seconds) {\r\n        tasbih.longPressCountButton(seconds);\r\n    }\r\n\r\n    @Then(\"the display on the screen doesn't change\")\r\n    public void theDisplayOnTheScreenDoesnTChange() {\r\n        int currentCount = tasbih.getCount();\r\n        assertEquals(initialCount, currentCount);\r\n    }\r\n\r\n    @Then(\"The count stops at {int}\")\r\n    public void theCountStopsAt(int count) {\r\n        int currentCount = tasbih.getCount();\r\n        assertEquals(count, currentCount);\r\n    }\r\n\r\n    @When(\"I press the count button and reset button at same times\")\r\n    public void iPressTheCountButtonAndResetButtonAtSameTimes() {\r\n        tasbih.pressCountAndResetButtonsSimultaneously();\r\n    }\r\n\r\n    @Then(\"device doesn't respond\")\r\n    public void deviceDoesnTRespond() {\r\n        assertTrue(tasbih.isSimultaneousPressDetected());\r\n    }\r\n\r\n    @When(\"I press the count button and LED button at same times\")\r\n    public void iPressTheCountButtonAndLEDButtonAtSameTimes() {\r\n        tasbih.pressCountAndLEDButtonsSimultaneously();\r\n    }\r\n\r\n    @Then(\"The count reset to {int}\")\r\n    public void theCountResetTo(int reset) {\r\n        assertEquals(0, tasbih.getCount());\r\n    }\r\n\r\n    @When(\"I long press the reset button {int} second\")\r\n    public void iLongPressTheResetButtonSecond(int seconds) {\r\n        tasbih.longPressResetButton(seconds);\r\n    }\r\n\r\n    @When(\"I press the reset button and Count button at same times\")\r\n    public void iPressTheResetButtonAndCountButtonAtSameTimes() {\r\n        tasbih.pressResetAndCountButtonsSimultaneously();\r\n    }\r\n\r\n    @When(\"I press the reset button and LED button at same times\")\r\n    public void iPressTheResetButtonAndLEDButtonAtSameTimes() {\r\n        tasbih.pressResetAndLEDButtonsSimultaneously();\r\n    }\r\n\r\n    @Then(\"Wait until LED ligh is turn off\")\r\n    public void waitUntilLEDLighIsTurnOff() {\r\n        tasbih.waitUntilLEDLightIsTurnedOff();\r\n    }\r\n\r\n    @When(\"I press the LED button and Count button at same times\")\r\n    public void iPressTheLEDButtonAndCountButtonAtSameTimes() {\r\n        tasbih.pressLEDAndCountButtonsSimultaneously();\r\n    }\r\n\r\n    @When(\"I press the LED button and Reset button at same times\")\r\n    public void iPressTheLEDButtonAndResetButtonAtSameTimes() {\r\n        tasbih.pressLEDAndResetButtonsSimultaneously();\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/test/java/steps/TasbihSteps.java b/src/test/java/steps/TasbihSteps.java
--- a/src/test/java/steps/TasbihSteps.java	(revision 3ee4f8325449467c98f54f7fa461c3d11a9c548d)
+++ b/src/test/java/steps/TasbihSteps.java	(date 1725526407148)
@@ -58,7 +58,7 @@
     @And("ignore the device until the screen turns off")
     public void ignoreTheDeviceUntilTheScreenTurnsOff() throws InterruptedException {
             Thread.sleep(31000);
-            assertEquals(false, tasbih.isScreenOn());  //
+            assertEquals(false, tasbih.isScreenOn());
     }
 
     @When("I long press the count button {int} second")
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"30c075ce-4528-4e9b-a075-067e8d0ba864\" name=\"Changes\" comment=\"\">\r\n      <change afterPath=\"$PROJECT_DIR$/src/test/resources/features/BtnLed.feature\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/org/example/Tasbih.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/org/example/Tasbih.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/test/java/runner/RunCucumberTest.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/test/java/runner/RunCucumberTest.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/test/java/steps/TasbihSteps.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/test/java/steps/TasbihSteps.java\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"Class\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"ProjectColorInfo\">{\r\n  &quot;associatedIndex&quot;: 8\r\n}</component>\r\n  <component name=\"ProjectId\" id=\"2ldWuY2bCUEBzHeOjQVKjZ6SA84\" />\r\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\" />\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\"><![CDATA[{\r\n  \"keyToString\": {\r\n    \"Cucumber Java.Feature: BtnCount.executor\": \"Run\",\r\n    \"Cucumber Java.Feature: BtnLed.executor\": \"Run\",\r\n    \"Cucumber Java.Feature: tasbih.executor\": \"Run\",\r\n    \"Cucumber Java.Scenario: Testing Count After screen Turn Off.executor\": \"Run\",\r\n    \"Cucumber Java.Scenario: Testing LED Stays On after Count.executor\": \"Run\",\r\n    \"Cucumber Java.Scenario: Testing LED at Count 0.executor\": \"Run\",\r\n    \"Cucumber Java.Scenario: Testing Long Press the reset button.executor\": \"Run\",\r\n    \"Cucumber Java.Scenario: Testing Reset When LED is On.executor\": \"Run\",\r\n    \"Cucumber Java.Scenario: Testing reset when count is 0.executor\": \"Run\",\r\n    \"Cucumber Java.Scenario: Testing the Count button when long pressed.executor\": \"Run\",\r\n    \"Cucumber Java.Scenario: Testing the waiting time of LED lights.executor\": \"Run\",\r\n    \"JUnit.RunCucumberTest.executor\": \"Run\",\r\n    \"RunOnceActivity.ShowReadmeOnStart\": \"true\",\r\n    \"SHARE_PROJECT_CONFIGURATION_FILES\": \"true\",\r\n    \"git-widget-placeholder\": \"main\",\r\n    \"kotlin-language-version-configured\": \"true\",\r\n    \"last_opened_file_path\": \"C:/Users/haryi/IdeaProjects/DigitalTasbih/src/test/java/steps\",\r\n    \"onboarding.tips.debug.path\": \"C:/Users/haryi/IdeaProjects/DigitalTasbih/src/main/java/org/example/Main.java\"\r\n  }\r\n}]]></component>\r\n  <component name=\"RecentsManager\">\r\n    <key name=\"MoveFile.RECENT_KEYS\">\r\n      <recent name=\"C:\\Users\\haryi\\IdeaProjects\\DigitalTasbih\\src\\test\" />\r\n    </key>\r\n  </component>\r\n  <component name=\"RunManager\" selected=\"Cucumber Java.Scenario: Testing Reset When LED is On\">\r\n    <configuration name=\"Feature: BtnLed\" type=\"CucumberJavaRunConfigurationType\" factoryName=\"Cucumber java\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"CUCUMBER_CORE_VERSION\" value=\"5\" />\r\n      <option name=\"FILE_PATH\" value=\"$PROJECT_DIR$/src/test/resources/features/BtnLed.feature\" />\r\n      <option name=\"GLUE\" value=\"net.serenitybdd.cucumber.actors steps\" />\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"io.cucumber.core.cli.Main\" />\r\n      <module name=\"DigitalTasbih\" />\r\n      <option name=\"PROGRAM_PARAMETERS\" value=\" --plugin org.jetbrains.plugins.cucumber.java.run.CucumberJvm5SMFormatter\" />\r\n      <option name=\"SUGGESTED_NAME\" value=\"Feature: BtnLed\" />\r\n      <option name=\"WORKING_DIRECTORY\" value=\"$MODULE_WORKING_DIR$\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"io.cucumber.core.cli.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"Scenario: Testing LED Stays On after Count\" type=\"CucumberJavaRunConfigurationType\" factoryName=\"Cucumber java\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"CUCUMBER_CORE_VERSION\" value=\"5\" />\r\n      <option name=\"FILE_PATH\" value=\"$PROJECT_DIR$/src/test/resources/features/BtnLed.feature\" />\r\n      <option name=\"GLUE\" value=\"net.serenitybdd.cucumber.actors steps\" />\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"io.cucumber.core.cli.Main\" />\r\n      <module name=\"DigitalTasbih\" />\r\n      <option name=\"NAME_FILTER\" value=\"^Testing LED Stays On after Count$\" />\r\n      <option name=\"PROGRAM_PARAMETERS\" value=\" --plugin org.jetbrains.plugins.cucumber.java.run.CucumberJvm5SMFormatter --name &quot;^Testing LED Stays On after Count$&quot;\" />\r\n      <option name=\"SUGGESTED_NAME\" value=\"Scenario: Testing LED Stays On after Count\" />\r\n      <option name=\"WORKING_DIRECTORY\" value=\"$MODULE_WORKING_DIR$\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"io.cucumber.core.cli.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"Scenario: Testing LED at Count 0\" type=\"CucumberJavaRunConfigurationType\" factoryName=\"Cucumber java\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"CUCUMBER_CORE_VERSION\" value=\"5\" />\r\n      <option name=\"FILE_PATH\" value=\"$PROJECT_DIR$/src/test/resources/features/BtnLed.feature\" />\r\n      <option name=\"GLUE\" value=\"net.serenitybdd.cucumber.actors steps\" />\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"io.cucumber.core.cli.Main\" />\r\n      <module name=\"DigitalTasbih\" />\r\n      <option name=\"NAME_FILTER\" value=\"^Testing LED at Count 0$\" />\r\n      <option name=\"PROGRAM_PARAMETERS\" value=\" --plugin org.jetbrains.plugins.cucumber.java.run.CucumberJvm5SMFormatter --name &quot;^Testing LED at Count 0$&quot;\" />\r\n      <option name=\"SUGGESTED_NAME\" value=\"Scenario: Testing LED at Count 0\" />\r\n      <option name=\"WORKING_DIRECTORY\" value=\"$MODULE_WORKING_DIR$\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"io.cucumber.core.cli.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"Scenario: Testing Reset When LED is On\" type=\"CucumberJavaRunConfigurationType\" factoryName=\"Cucumber java\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"CUCUMBER_CORE_VERSION\" value=\"5\" />\r\n      <option name=\"FILE_PATH\" value=\"$PROJECT_DIR$/src/test/resources/features/BtnLed.feature\" />\r\n      <option name=\"GLUE\" value=\"net.serenitybdd.cucumber.actors steps\" />\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"io.cucumber.core.cli.Main\" />\r\n      <module name=\"DigitalTasbih\" />\r\n      <option name=\"NAME_FILTER\" value=\"^Testing Reset When LED is On$\" />\r\n      <option name=\"PROGRAM_PARAMETERS\" value=\" --plugin org.jetbrains.plugins.cucumber.java.run.CucumberJvm5SMFormatter --name &quot;^Testing Reset When LED is On$&quot;\" />\r\n      <option name=\"SUGGESTED_NAME\" value=\"Scenario: Testing Reset When LED is On\" />\r\n      <option name=\"WORKING_DIRECTORY\" value=\"$MODULE_WORKING_DIR$\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"io.cucumber.core.cli.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"Scenario: Testing the waiting time of LED lights\" type=\"CucumberJavaRunConfigurationType\" factoryName=\"Cucumber java\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"CUCUMBER_CORE_VERSION\" value=\"5\" />\r\n      <option name=\"FILE_PATH\" value=\"$PROJECT_DIR$/src/test/resources/features/BtnLed.feature\" />\r\n      <option name=\"GLUE\" value=\"net.serenitybdd.cucumber.actors steps\" />\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"io.cucumber.core.cli.Main\" />\r\n      <module name=\"DigitalTasbih\" />\r\n      <option name=\"NAME_FILTER\" value=\"^Testing the waiting time of LED lights$\" />\r\n      <option name=\"PROGRAM_PARAMETERS\" value=\" --plugin org.jetbrains.plugins.cucumber.java.run.CucumberJvm5SMFormatter --name &quot;^Testing the waiting time of LED lights$&quot;\" />\r\n      <option name=\"SUGGESTED_NAME\" value=\"Scenario: Testing the waiting time of LED lights\" />\r\n      <option name=\"WORKING_DIRECTORY\" value=\"$MODULE_WORKING_DIR$\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"io.cucumber.core.cli.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <recent_temporary>\r\n      <list>\r\n        <item itemvalue=\"Cucumber Java.Scenario: Testing Reset When LED is On\" />\r\n        <item itemvalue=\"Cucumber Java.Scenario: Testing LED Stays On after Count\" />\r\n        <item itemvalue=\"Cucumber Java.Scenario: Testing the waiting time of LED lights\" />\r\n        <item itemvalue=\"Cucumber Java.Scenario: Testing LED at Count 0\" />\r\n        <item itemvalue=\"Cucumber Java.Feature: BtnLed\" />\r\n      </list>\r\n    </recent_temporary>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"30c075ce-4528-4e9b-a075-067e8d0ba864\" name=\"Changes\" comment=\"\" />\r\n      <created>1725510658596</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1725510658596</updated>\r\n    </task>\r\n    <servers />\r\n  </component>\r\n  <component name=\"XDebuggerManager\">\r\n    <breakpoint-manager>\r\n      <breakpoints>\r\n        <line-breakpoint enabled=\"true\" type=\"java-line\">\r\n          <url>file://$PROJECT_DIR$/src/main/java/org/example/Main.java</url>\r\n          <line>13</line>\r\n          <option name=\"timeStamp\" value=\"1\" />\r\n        </line-breakpoint>\r\n      </breakpoints>\r\n    </breakpoint-manager>\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision 3ee4f8325449467c98f54f7fa461c3d11a9c548d)
+++ b/.idea/workspace.xml	(date 1725526422423)
@@ -5,10 +5,6 @@
   </component>
   <component name="ChangeListManager">
     <list default="true" id="30c075ce-4528-4e9b-a075-067e8d0ba864" name="Changes" comment="">
-      <change afterPath="$PROJECT_DIR$/src/test/resources/features/BtnLed.feature" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/java/org/example/Tasbih.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/org/example/Tasbih.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/test/java/runner/RunCucumberTest.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/test/java/runner/RunCucumberTest.java" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/src/test/java/steps/TasbihSteps.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/test/java/steps/TasbihSteps.java" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
